if (project.hasProperty('android')) {
    apply from: "$buildscript.sourceFile.parent/android-maven-publish.gradle"
} else {
    apply from: "$buildscript.sourceFile.parent/maven-publish.gradle"
}

def isSnapshot = project.version.endsWith '-SNAPSHOT'

if (!isSnapshot &&
    project.hasProperty('sonatype.username') &&
    project.hasProperty('sonatype.password') &&
    project.hasProperty('sonatype.baseUrl')) {

    apply plugin: 'io.github.gradle-nexus.publish-plugin'

    def sonatypeUser = project.'sonatype.username' as String
    def sonatypePassword = project.'sonatype.password' as String
    def sonatypeUrl = project.'sonatype.baseUrl' as String

    publishing {
        repositories {
            maven {
                url "$sonatypeUrl/service/local/staging/deploy/maven2/"
                credentials {
                    username sonatypeUser
                    password sonatypePassword
                }
            }
        }
    }

    project.nexusPublishing {
        repositories {
            it.sonatype {  //only for users registered in Sonatype after 24 Feb 2021
                nexusUrl = uri("$sonatypeUrl/service/local/")
                snapshotRepositoryUrl = uri("$sonatypeUrl/content/repositories/snapshots/")
                username = sonatypeUser
                password = sonatypePassword
            }
        }
    }

    project.afterEvaluate {
        project.tasks.create("publishAndRelease")  {
            dependsOn(project.publishToSonatype, project.closeAndReleaseSonatypeStagingRepository)
        }
    }
}
