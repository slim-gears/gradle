import groovy.text.SimpleTemplateEngine

apply plugin: 'com.gradle.build-scan'

if (!rootProject.hasProperty('scriptsDir')) {
    rootProject.ext.scriptsDir = buildscript.sourceFile.parent
}

project.group projectGroup
project.version = System.getenv('TRAVIS_TAG') ?: projectVersion

project.ext.sourceCompatibility = 1.8

static def loadProperties(Project prj, File file) {
    if (!prj.hasProperty('props')) {
        prj.ext.props = [:]
        if (prj != prj.rootProject) {
            prj.ext.props << prj.rootProject.props
        }
    }
    def props = new Properties()
    file.withInputStream { props.load(it) }
    def evaluator = new SimpleTemplateEngine()
    Map bindings = new HashMap(props)
    def name = file.name.take(file.name.lastIndexOf('.')) as String
    bindings.projectName = prj.name
    def needsEvaluation = true
    while (needsEvaluation) {
        def evaluatedCount = 0
        new HashMap(bindings)
                .findAll { (it.value as String).contains('$') }
                .forEach { key, value ->
            def template = evaluator.createTemplate(value.toString())
            def evaluated = template.make(bindings).toString()
            if (evaluated != value) {
                evaluatedCount++
                bindings[key] = evaluated
            }
        }
        needsEvaluation = evaluatedCount > 0
    }
    prj.ext[name] = bindings
    prj.props[name] = bindings
}

rootProject.ext.applyScripts = { Collection<String> scripts, Collection<String> projects ->
    scripts.each { script ->
        projects
                .collect {rootProject.project(it)}
                .each { prj -> prj.apply(from: script) }
    }
}

allprojects { Project prj ->
    group rootProject.group
    version rootProject.version

    prj.projectDir
            .listFiles ({ dir, name -> name ==~ /.*\.properties/ } as FilenameFilter)
            .each { loadProperties(prj, it) }
}

subprojects {
    repositories {
        jcenter()
        mavenLocal()
        maven { url 'https://dl.bintray.com/slim-gears/maven' }
        maven { url 'https://jitpack.io' }
    }
}

buildScan {
    termsOfServiceUrl = 'https://gradle.com/terms-of-service'
    termsOfServiceAgree = 'yes'
}
