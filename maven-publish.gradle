apply plugin: 'java'
apply plugin: 'maven-publish'

publishing {
    repositories {
        mavenLocal()
    }
}

ext.addPublication = { String sourceSetName ->
    def sourceSet = sourceSets.getByName(sourceSetName)

    def sourcesJarTask = project.tasks.create(name: "${sourceSetName}SourcesJar", type: Jar) {
        from sourceSet.allSource
        classifier = 'sources'
    }

    def javaDocJarTask = project.tasks.create(name: "${sourceSetName}JavaDocJar", type: Jar) {
        from javadoc
        classifier = 'javadoc'
    }

    def jarTask = project.tasks.create(name: "${sourceSetName}Jar", type: Jar, dependsOn: sourceSet.classesTaskName) {
        from sourceSet.output
    }

    project.publishing.publications.create("${sourceSetName}Maven", MavenPublication) {
        groupId = project.group
        artifactId = sourceSetName == 'main' ? project.name : "$project.name-$sourceSetName"
        artifact sourcesJarTask
        if (sourceSetName != 'main') {
            artifact javaDocJarTask
        }
        artifact jarTask
        pom.withXml {
            def depsNode = asNode().appendNode('dependencies')
            configurations.getByName(sourceSet.implementationConfigurationName).allDependencies
                    .findAll { it.group != null && it.name != null }
                    .forEach {
                def depNode = depsNode.appendNode('dependency')
                depNode.appendNode('groupId', it.group)
                depNode.appendNode('artifactId', it.name)
                depNode.appendNode('version', it.version)

                if (!it.excludeRules.isEmpty()) {
                    def exclusionsNode = depNode.appendNode('exclusions')
                    it.excludeRules.each { rule ->
                        def exclusionNode = exclusionsNode.appendNode('exclusion')
                        exclusionNode.appendNode('groupId', rule.group)
                        exclusionNode.appendNode('artifactId', rule.module)
                    }
                }
            }
        }
    }
}

project.afterEvaluate {
    sourceSets.findAll { it.name != 'test' && it.name != 'generated' }.collect { it.name }.each {
        project.addPublication(it)
    }
}

task install(type: DefaultTask, dependsOn: publishToMavenLocal)
